{{ form_start(form) }}
<div class="col-12 grid-margin stretch-card">
    <div class="card">
      <div class="card-body">
        <h4 class="card-title">Infos. prospect</h4>
        <p class="card-description"></p>
          <div class="row">
            <div class="col">
              {{ form_label(form.user) }}
              {{ form_widget(form.user) }}
            </div>
            <div class="col">
              {{ form_label(form.phase) }}
              {{ form_widget(form.phase) }}
            </div>
            <div class="col">
              {{ form_label(form.status) }}
              {{ form_widget(form.status) }}
            </div>
          </div>
          <hr>
          <div class="form-group">
            {{ form_label(form.first_name) }}
            {{ form_widget(form.first_name) }}
          </div>
          <div class="form-group">
            {{ form_label(form.last_name) }}
            {{ form_widget(form.last_name) }}
          </div>
          <div class="form-group">
            {{ form_label(form.email) }}
            {{ form_widget(form.email) }}
          </div>
          <div class="form-group">
            {{ form_label(form.phone) }}
            {{ form_widget(form.phone) }}
          </div>
      </div>
    </div>
     
</div>

<div class="card">
    <div class="card-body">
        <h4 class="card-title">Adresses</h4>
        <p class="card-description"></p>
       {% if client.adresses %}
            <ul id="addressList">
                {% for address in client.adresses %}
                    <li>{{ address.address1 }}, {{ address.address2 }}, {{ address.city }}</li>
                {% else %}
                    <li>Aucune adresse ajoutée</li>
                {% endfor %}
            </ul>
        {% else %}
            <p>Les adresses ne sont pas encore chargées.</p>
        {% endif %}
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#AdresseForm">
          Creer une nouvelle adresse
        </button>

    </div>
</div>
<div class="card mt-3">
    <div class="card-body">
        <a class="btn btn-outline-primary" href="{{ path('app_client_index') }}">< Retour à la liste</a>
        <button class="btn btn-primary">{{ button_label|default('Valider') }}</button>
        <button class="btn btn-outline-primary">Etape suivante ></button>
    </div>
</div>

<!-- Modale pour ajouter une adresse -->
    
{{ form_end(form, { 'render_rest': false }) }}
<!-- Modal -->
<div class="modal fade" id="AdresseForm" tabindex="-1" aria-labelledby="AdresseFormLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="AdresseFormLabel">Nouvelle adresse</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      {{ form_start(adress_form, {'action': path('app_api_adresses_add', {'clientId': client.id})}) }}
      <div class="modal-body">

        <div class="form-group">
          <label for="">Designation</label>
          {{ form_widget(adress_form.designation) }}
        </div>
        <div class="form-group">
          <label for="">Adresser 1</label>
          {{ form_widget(adress_form.address_1) }}
        </div>
        <div class="form-group">
          <label for="">Adresser 2</label>
          {{ form_widget(adress_form.address_2) }}
        </div>
        <div class="form-group">
          <label for="">Ville</label>
          {{ form_widget(adress_form.city) }}
        </div>
        <div class="form-group">
          <label for="">Code postal</label>
          {{ form_widget(adress_form.zip) }}
        </div>
        <div class="form-group">
          <label for="">Pays</label>
          {{ form_widget(adress_form.country) }}
        </div>    
        
      </div>
      
      <div class="modal-footer">
        {{ form_widget(adress_form.submit) }}
      </div>
      {{ form_end(adress_form) }} 
    </div>
  </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const phaseSelect = document.getElementById('client_phase');
        const statusSelect = document.getElementById('client_status');

        phaseSelect.addEventListener('change', function () {
            const phaseId = phaseSelect.value;

            statusSelect.innerHTML = '<option value="">Sélectionnez un statut</option>';

            if (phaseId) {
                fetch(`/client/status/${phaseId}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(status => {
                            const option = document.createElement('option');
                            option.value = status.id;
                            option.textContent = status.name;
                            statusSelect.appendChild(option);
                        });
                        statusSelect.disabled = false;
                    })
                    .catch(error => console.error('Erreur:', error));
            } else {
                statusSelect.disabled = true;
            }
        });
    });

    document.getElementById('addAddressForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    const form = e.target;
    const formData = new FormData(form);

    try {
        const response = await fetch(form.action, {
            method: 'POST',
            body: formData,
        });

        if (!response.ok) {
            const data = await response.json();
            alert('Erreur : ' + data.errors);
            return;
        }

        const newAddress = await response.json();

        // Ajouter l'adresse à la liste
        const addressList = document.getElementById('addressList');
        const newAddressItem = document.createElement('li');
        newAddressItem.id = 'address-' + newAddress.id;
        newAddressItem.textContent = `${newAddress.address_1}, ${newAddress.address_2}, ${newAddress.city}`;

        // Retirer le message "Aucune adresse ajoutée" s'il est présent
        const noAddressesMessage = document.getElementById('noAddresses');
        if (noAddressesMessage) {
            noAddressesMessage.remove();
        }

        addressList.appendChild(newAddressItem);

        // Réinitialiser le formulaire
        form.reset();
    } catch (error) {
        console.error('Erreur lors de l\'ajout de l\'adresse:', error);
        alert('Une erreur est survenue. Veuillez réessayer.');
    }
});

</script>